syntax = "proto3";

package telephone;

option go_package = "/internal/proto/contacts";

message User{
  uint64 user_id = 1;
  string name = 2;
  string email = 3;
}

message Contact {
  uint64 contact_id = 1;
  string phone = 2;
}

message UserContacts{
  uint64 user_contacts_id = 1;
  uint64 contact_id = 2;
  bool is_fav = 3;
  uint64 user_id = 4;
}


message AddUserContactResponse{
  bool success = 1;
  string message = 2;
}

// Request message to create a Contact
message CreateContactRequest {
  Contact contact = 1;
}

// Request message to create a User
message CreateUserRequest {
  User user = 1;
}

message AddUserContactRequest {
  UserContacts user_contact = 1;
}

message CreateUserResponse {
  bool success = 1;
  string message = 2;
}

message CreateContactResponse {
  bool success = 1;
  string message = 2;
}

message GetContactRequest {
  int32 contact_id = 1;
}

message GetUserRequest {
  int32 id = 1;
}

message GetUserContactRequest {
  int32 user_contacts_id = 1;
}

message GetContactResponse {
  Contact contact = 1;
}

message GetUserResponse {
  User user = 1;
}

message GetUserContactResponse {
  UserContacts user_contact = 1;
}

message CreateUserContactResponse {
  bool success = 1;
  string message = 2;
}

message GetUsersRequest{

}
message GetUsersResponse{
  repeated User users = 1;
}

service UserContactService{
  rpc CreateContact(CreateContactRequest) returns (CreateContactResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc AddUserContact(AddUserContactRequest) returns (AddUserContactResponse);
  rpc GetAllUsers(GetUsersRequest) returns (GetUsersResponse);
  rpc GetContact(GetContactRequest) returns (GetContactResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc GetUserContact(GetUserContactRequest) returns (GetUserContactResponse);

}
